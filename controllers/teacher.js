import Teacher from "../models/teachers.js";

// create teacher
import mongoose from "mongoose";

export const createTeacher = async (req, res) => {
    try {
        const { name, subjects, semesters } = req.body;

        if (!Array.isArray(subjects) || subjects.length === 0) {
            return res.status(400).json({
                success: false,
                message: "At least one subject is required"
            });
        }

        // Convert subject IDs to ObjectId
        const subjectIds = subjects.map(id => new mongoose.Types.ObjectId(id));

        // The teacherId will be auto-generated by the schema
        const teacher = await Teacher.create({ 
            name, 
            subjects: subjectIds, 
            semesters 
        });

        res.status(201).json({
            success: true,
            message: "Teacher created successfully",
            data: teacher
        });
    } catch (error) {
        res.status(400).json({
            success: false,
            message: error.message
        });
    }
};


// get all teachers
export const getTeachers = async (req, res) => {
    try {
      const teachers = await Teacher.find();
      res.status(200).json({
        success: true,
        message: "Teachers fetched successfully",
        data: teachers
      });
    } catch (error) {
      res.status(500).json({
        success: false,
        message: error.message
      });
    }
  };

// delete teacher
export const deleteTeacher = async (req, res) => {
    try {
      const { id } = req.params;
      const teacher = await Teacher.findByIdAndDelete(id);
      res.status(200).json({
        success: true,
        message: "Teacher deleted successfully",
        data: teacher
      });
    } catch (error) {
      res.status(500).json({
        success: false,
        message: error.message
      });
    }
  };

// update teacher
export const updateTeacher = async (req, res) => {
    try {
      const { id } = req.params;
      const { name, subjects, semesters } = req.body;
      const teacher = await Teacher.findByIdAndUpdate(id, { name, subjects, semesters }, { new: true });
      res.status(200).json({
        success: true,
        message: "Teacher updated successfully",
        data: teacher
      });
    } catch (error) {
      res.status(500).json({
        success: false,
        message: error.message
      });
    }
  };    


// get teacher by id
export const getTeacherById = async (req, res) => {
    try {
      const { id } = req.params;
      const teacher = await Teacher.findById(id);
      res.status(200).json({
        success: true,
        message: "Teacher fetched successfully",
        data: teacher
      });
    } catch (error) {
      res.status(500).json({
        success: false,
        message: error.message
      });
    }
  };

  // get teacher by name
  export const getTeacherByName = async (req, res) => {
    try {
      const { name } = req.params;
      const teacher = await Teacher.findOne({ name });
      res.status(200).json({
        success: true,
        message: "Teacher fetched successfully",
        data: teacher
      });
    } catch (error) {
      res.status(500).json({
        success: false, 
        message: error.message
      });
    }
  };


